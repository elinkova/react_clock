{"version":3,"sources":["Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","date","Date","toLocaleTimeString","timerId","this","setInterval","setState","console","log","clearInterval","React","Component","clockNames","App","isClockVisible","clockName","showClock","hideClock","setRandomName","Math","floor","random","length","prevProps","prevState","className","name","type","onClick","disabled","ReactDOM","render","document","getElementById"],"mappings":"sNAUaA,EAAb,4MACEC,MAAQ,CACNC,MAAM,IAAIC,MAAOC,sBAFrB,EAKEC,aALF,yDAOE,WAAqB,IAAD,OAClBC,KAAKD,QAAUE,aAAY,WACzB,EAAKC,SAAS,CAAEN,MAAM,IAAIC,MAAOC,uBAEjCK,QAAQC,IAAI,EAAKT,MAAMC,QACtB,OAZP,kCAeE,WACMI,KAAKD,SACPM,cAAcL,KAAKD,WAjBzB,oBAqBE,WACE,OACE,sBAAM,UAAQ,OAAd,SACGC,KAAKL,MAAMC,WAxBpB,GAA2BU,IAAMC,WCN3BC,EAAa,CAAC,wBAAyB,kBAAmB,+BAAgC,SAOnFC,EAAb,4MACEd,MAAQ,CACNe,gBAAgB,EAChBC,UAAW,SAHf,EAeEC,UAAY,WACV,EAAKV,SAAS,CAAEQ,gBAAgB,KAhBpC,EAmBEG,UAAY,WACV,EAAKX,SAAS,CAAEQ,gBAAgB,KApBpC,EAuBEI,cAAgB,WACd,EAAKZ,SAAS,CAAES,UAAWH,EAAWO,KAAKC,MAAMD,KAAKE,SAAWT,EAAWU,YAxBhF,wDAME,SAAmBC,EAAeC,GAC5BA,EAAUT,YAAcX,KAAKL,MAAMgB,YAErCR,QAAQC,IAAIe,GAEZhB,QAAQC,IAAR,qCAA0CgB,EAAUT,UAApD,eAAoEX,KAAKL,MAAMgB,eAXrF,oBA2BE,WACE,OACE,sBAAKU,UAAU,MAAf,UACE,6BAAKrB,KAAKL,MAAMgB,YAChB,8CAEG,IACAX,KAAKL,MAAMe,gBAAkB,cAAC,EAAD,CAAOY,KAAMtB,KAAKL,MAAMgB,eAGxD,wBACEY,KAAK,SACLC,QAASxB,KAAKY,UACda,SAAUzB,KAAKL,MAAMe,eAHvB,wBAQA,wBACEa,KAAK,SACLC,QAASxB,KAAKa,UACdY,UAAWzB,KAAKL,MAAMe,eAHxB,wBAQA,wBACEa,KAAK,SACLC,QAASxB,KAAKc,cAFhB,gCArDR,GAAyBR,IAAMC,WCR/BmB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.47818689.chunk.js","sourcesContent":["import React from 'react';\n\ninterface Props {\n  name: {};\n}\n\ninterface State {\n  date: string;\n}\n\nexport class Clock extends React.Component<Props, State> {\n  state = {\n    date: new Date().toLocaleTimeString(),\n  };\n\n  timerId?: NodeJS.Timer;\n\n  componentDidMount() {\n    this.timerId = setInterval(() => {\n      this.setState({ date: new Date().toLocaleTimeString() });\n      // eslint-disable-next-line\n      console.log(this.state.date);\n    }, 1000);\n  }\n\n  componentWillUnmount() {\n    if (this.timerId) {\n      clearInterval(this.timerId);\n    }\n  }\n\n  render() {\n    return (\n      <span data-cy=\"time\">\n        {this.state.date}\n      </span>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './Clock';\n\nconst clockNames = ['Try to stop real time', 'Time in Ukraine', 'Its time to live better life', 'Clock'];\n\ninterface State {\n  isClockVisible: boolean;\n  clockName: string;\n}\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    isClockVisible: true,\n    clockName: 'Clock',\n  };\n\n  componentDidUpdate(prevProps: {}, prevState: State) {\n    if (prevState.clockName !== this.state.clockName) {\n      // eslint-disable-next-line\n      console.log(prevProps);\n      // eslint-disable-next-line\n      console.log(`The Clock was renamed from ${prevState.clockName} to ${this.state.clockName}`);\n    }\n  }\n\n  showClock = () => {\n    this.setState({ isClockVisible: true });\n  };\n\n  hideClock = () => {\n    this.setState({ isClockVisible: false });\n  };\n\n  setRandomName = () => {\n    this.setState({ clockName: clockNames[Math.floor(Math.random() * clockNames.length)] });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>{this.state.clockName}</h1>\n        <p>\n          Current time:\n          {' '}\n          {this.state.isClockVisible && <Clock name={this.state.clockName} />}\n        </p>\n\n        <button\n          type=\"button\"\n          onClick={this.showClock}\n          disabled={this.state.isClockVisible}\n        >\n          Show Clock\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={this.hideClock}\n          disabled={!this.state.isClockVisible}\n        >\n          Hide Clock\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={this.setRandomName}\n        >\n          Random Name\n        </button>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}